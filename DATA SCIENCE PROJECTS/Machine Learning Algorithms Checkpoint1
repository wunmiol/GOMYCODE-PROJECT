{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNVzV5/rxJpmcKXl3Z/W6dd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"af7d9bf7b00c466ba2065f77a5f13705":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_20a421b2c4b7403c9c2b56150eef61a4","IPY_MODEL_708928db54fb44f3add6f07ef1879b47","IPY_MODEL_11f0f429b0e44168ad72f0de01a6b02b"],"layout":"IPY_MODEL_d1067100a44c4aaf9157fd72a90555dc"}},"20a421b2c4b7403c9c2b56150eef61a4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4b1268e022b540e4a3750713d4b18ff1","placeholder":"​","style":"IPY_MODEL_3173354b9de34b9c854c6d2e88966057","value":"Summarize dataset: 100%"}},"708928db54fb44f3add6f07ef1879b47":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8f07fed2959e4565a11819b6b43da5a8","max":5,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f924b004b3fa4388a5525f27d9ca4191","value":5}},"11f0f429b0e44168ad72f0de01a6b02b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ae59eb75eee846bcb0fb7a4d7e4b796e","placeholder":"​","style":"IPY_MODEL_1e8ffb3e3d814e75baabf4e4b4b0d313","value":" 21/21 [00:05&lt;00:00,  4.09it/s, Completed]"}},"d1067100a44c4aaf9157fd72a90555dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4b1268e022b540e4a3750713d4b18ff1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3173354b9de34b9c854c6d2e88966057":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8f07fed2959e4565a11819b6b43da5a8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f924b004b3fa4388a5525f27d9ca4191":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ae59eb75eee846bcb0fb7a4d7e4b796e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1e8ffb3e3d814e75baabf4e4b4b0d313":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e720421280634e378aeaadef1e08bd10":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f31ca1a72c804d859dd25522a015d68a","IPY_MODEL_d2d36b8bd0a34c1b9d51d7466f204438","IPY_MODEL_c4920c30d803448a90a860243e2e3404"],"layout":"IPY_MODEL_d9d166817e1a402790446bdcf2844cdf"}},"f31ca1a72c804d859dd25522a015d68a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8bcfa6ad5c864db7b0e2d6234046be24","placeholder":"​","style":"IPY_MODEL_1e2549517566426f965a20b2fa858b5c","value":"Generate report structure: 100%"}},"d2d36b8bd0a34c1b9d51d7466f204438":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cf0621bcaf03491f880c0564a6d3e94b","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f4af5b2ef3d749fe8e9e00b79e8bf45e","value":1}},"c4920c30d803448a90a860243e2e3404":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_94d7e2580ea94f3a81c2d4b0ce2cf898","placeholder":"​","style":"IPY_MODEL_29ac4064d49d45eeb0a6d270515bdc92","value":" 1/1 [00:05&lt;00:00,  5.46s/it]"}},"d9d166817e1a402790446bdcf2844cdf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8bcfa6ad5c864db7b0e2d6234046be24":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1e2549517566426f965a20b2fa858b5c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cf0621bcaf03491f880c0564a6d3e94b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f4af5b2ef3d749fe8e9e00b79e8bf45e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"94d7e2580ea94f3a81c2d4b0ce2cf898":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"29ac4064d49d45eeb0a6d270515bdc92":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f8e315196e854194ab45db6f59d353dc":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8398c448a526434fbdabe09a69ba8bf7","IPY_MODEL_4d6326f5ac454ab4b151236432712976","IPY_MODEL_05123e84be8d42be86566d1646a27fe6"],"layout":"IPY_MODEL_d6eaa9eb07cb486d9890aa715016e8c7"}},"8398c448a526434fbdabe09a69ba8bf7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8472930ae58c4955b051eea48d8799a2","placeholder":"​","style":"IPY_MODEL_521d2c9f7e8441019111a909f0378549","value":"Render HTML: 100%"}},"4d6326f5ac454ab4b151236432712976":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4179ed5d97d94e6cb98a985aa7fe5ea0","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8a1aff071b2c4fbc8402bfe1f9922be0","value":1}},"05123e84be8d42be86566d1646a27fe6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_81719a89a6664318afc784c78e697845","placeholder":"​","style":"IPY_MODEL_3323cb81e625483ebf8e8d0dea5a453d","value":" 1/1 [00:01&lt;00:00,  1.04s/it]"}},"d6eaa9eb07cb486d9890aa715016e8c7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8472930ae58c4955b051eea48d8799a2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"521d2c9f7e8441019111a909f0378549":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4179ed5d97d94e6cb98a985aa7fe5ea0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8a1aff071b2c4fbc8402bfe1f9922be0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"81719a89a6664318afc784c78e697845":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3323cb81e625483ebf8e8d0dea5a453d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"998c02d2a201499489a7fb4d5fcf275b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_67d9f9f158b84844977b1ff0b44a4598","IPY_MODEL_da6db696cee247389953e57b39aca2d1","IPY_MODEL_32c8c80e04204a23a43a61f2982088d1"],"layout":"IPY_MODEL_a43e8193d3414f94bf6cdc8aac9fe949"}},"67d9f9f158b84844977b1ff0b44a4598":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d97ef96e44a4434c84906ae0e0a1bb5b","placeholder":"​","style":"IPY_MODEL_214501a66ada429c97352ff257940413","value":"Export report to file: 100%"}},"da6db696cee247389953e57b39aca2d1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_17e2a5635e8d49adb5bb670bc0438afa","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9aed178d66b649ffbbd9bbe77f1f2218","value":1}},"32c8c80e04204a23a43a61f2982088d1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ba9034b539e04d2b9ddbb86c95021b13","placeholder":"​","style":"IPY_MODEL_239dc322d44044b8bf2b9fe570d5541c","value":" 1/1 [00:00&lt;00:00, 29.91it/s]"}},"a43e8193d3414f94bf6cdc8aac9fe949":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d97ef96e44a4434c84906ae0e0a1bb5b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"214501a66ada429c97352ff257940413":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"17e2a5635e8d49adb5bb670bc0438afa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9aed178d66b649ffbbd9bbe77f1f2218":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ba9034b539e04d2b9ddbb86c95021b13":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"239dc322d44044b8bf2b9fe570d5541c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","source":["!pip install pandas-profiling\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wzURDMSz5nha","executionInfo":{"status":"ok","timestamp":1721503979452,"user_tz":-60,"elapsed":16413,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"8aea13bc-f7d8-4b0b-87f1-542049e0c36c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pandas-profiling\n","  Downloading pandas_profiling-3.6.6-py2.py3-none-any.whl (324 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m324.4/324.4 kB\u001b[0m \u001b[31m3.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting ydata-profiling (from pandas-profiling)\n","  Downloading ydata_profiling-4.9.0-py2.py3-none-any.whl (356 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m356.2/356.2 kB\u001b[0m \u001b[31m10.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: scipy<1.14,>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.11.4)\n","Requirement already satisfied: pandas!=1.4.0,<3,>1.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (2.0.3)\n","Requirement already satisfied: matplotlib<3.10,>=3.5 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (3.7.1)\n","Requirement already satisfied: pydantic>=2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (2.8.2)\n","Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (6.0.1)\n","Requirement already satisfied: jinja2<3.2,>=2.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (3.1.4)\n","Collecting visions[type_image_path]<0.7.7,>=0.7.5 (from ydata-profiling->pandas-profiling)\n","  Downloading visions-0.7.6-py3-none-any.whl (104 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m104.8/104.8 kB\u001b[0m \u001b[31m11.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy<2,>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.25.2)\n","Collecting htmlmin==0.1.12 (from ydata-profiling->pandas-profiling)\n","  Downloading htmlmin-0.1.12.tar.gz (19 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting phik<0.13,>=0.11.1 (from ydata-profiling->pandas-profiling)\n","  Downloading phik-0.12.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (686 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m686.1/686.1 kB\u001b[0m \u001b[31m9.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: requests<3,>=2.24.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (2.31.0)\n","Requirement already satisfied: tqdm<5,>=4.48.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (4.66.4)\n","Requirement already satisfied: seaborn<0.14,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.13.1)\n","Collecting multimethod<2,>=1.4 (from ydata-profiling->pandas-profiling)\n","  Downloading multimethod-1.12-py3-none-any.whl (10 kB)\n","Requirement already satisfied: statsmodels<1,>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.14.2)\n","Collecting typeguard<5,>=3 (from ydata-profiling->pandas-profiling)\n","  Downloading typeguard-4.3.0-py3-none-any.whl (35 kB)\n","Collecting imagehash==4.3.1 (from ydata-profiling->pandas-profiling)\n","  Downloading ImageHash-4.3.1-py2.py3-none-any.whl (296 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m296.5/296.5 kB\u001b[0m \u001b[31m9.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: wordcloud>=1.9.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.9.3)\n","Collecting dacite>=1.8 (from ydata-profiling->pandas-profiling)\n","  Downloading dacite-1.8.1-py3-none-any.whl (14 kB)\n","Requirement already satisfied: numba<1,>=0.56.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.58.1)\n","Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling->pandas-profiling) (1.6.0)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling->pandas-profiling) (9.4.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2<3.2,>=2.11.1->ydata-profiling->pandas-profiling) (2.1.5)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata-profiling->pandas-profiling) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata-profiling->pandas-profiling) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata-profiling->pandas-profiling) (4.53.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata-profiling->pandas-profiling) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata-profiling->pandas-profiling) (24.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata-profiling->pandas-profiling) (3.1.2)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata-profiling->pandas-profiling) (2.8.2)\n","Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba<1,>=0.56.0->ydata-profiling->pandas-profiling) (0.41.1)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<3,>1.1->ydata-profiling->pandas-profiling) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<3,>1.1->ydata-profiling->pandas-profiling) (2024.1)\n","Requirement already satisfied: joblib>=0.14.1 in /usr/local/lib/python3.10/dist-packages (from phik<0.13,>=0.11.1->ydata-profiling->pandas-profiling) (1.4.2)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata-profiling->pandas-profiling) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata-profiling->pandas-profiling) (2.20.1)\n","Requirement already satisfied: typing-extensions>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata-profiling->pandas-profiling) (4.12.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (2024.7.4)\n","Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels<1,>=0.13.2->ydata-profiling->pandas-profiling) (0.5.6)\n","Requirement already satisfied: attrs>=19.3.0 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]<0.7.7,>=0.7.5->ydata-profiling->pandas-profiling) (23.2.0)\n","Requirement already satisfied: networkx>=2.4 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]<0.7.7,>=0.7.5->ydata-profiling->pandas-profiling) (3.3)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.6->statsmodels<1,>=0.13.2->ydata-profiling->pandas-profiling) (1.16.0)\n","Building wheels for collected packages: htmlmin\n","  Building wheel for htmlmin (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for htmlmin: filename=htmlmin-0.1.12-py3-none-any.whl size=27080 sha256=fe409e834b5de97c2b7483b4c381d7af54332fe9b1c682c6703e8ba25f41f7ca\n","  Stored in directory: /root/.cache/pip/wheels/dd/91/29/a79cecb328d01739e64017b6fb9a1ab9d8cb1853098ec5966d\n","Successfully built htmlmin\n","Installing collected packages: htmlmin, typeguard, multimethod, dacite, imagehash, visions, phik, ydata-profiling, pandas-profiling\n","Successfully installed dacite-1.8.1 htmlmin-0.1.12 imagehash-4.3.1 multimethod-1.12 pandas-profiling-3.6.6 phik-0.12.4 typeguard-4.3.0 visions-0.7.6 ydata-profiling-4.9.0\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"id":"a-9_8bcnxZic","executionInfo":{"status":"ok","timestamp":1721504100451,"user_tz":-60,"elapsed":7464,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from ydata_profiling import ProfileReport\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import roc_curve, auc\n","from sklearn.preprocessing import LabelEncoder\n","from scipy.stats import zscore\n","\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.cluster import KMeans\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('/content/Microsoft_malware_dataset_min.csv')"],"metadata":{"id":"OX5dooTW5H9l","executionInfo":{"status":"ok","timestamp":1721504102320,"user_tz":-60,"elapsed":407,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["**DATA CLEANING**"],"metadata":{"id":"gg_mLOupKQey"}},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"DD6c6Xux-jr9","executionInfo":{"status":"ok","timestamp":1721476213292,"user_tz":-60,"elapsed":448,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"a0e71161-187c-4e96-93f9-a6a837e4a2fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   HasDetections  Wdft_IsGamer  Census_IsVirtualDevice Census_OSEdition  \\\n","0              0           0.0                     0.0     Professional   \n","1              0           0.0                     0.0     Professional   \n","2              0           0.0                     0.0             Core   \n","3              1           0.0                     0.0     Professional   \n","4              1           0.0                     0.0             Core   \n","\n","   Census_HasOpticalDiskDrive  Firewall  SMode  IsProtected  \\\n","0                           0       1.0    0.0          1.0   \n","1                           0       1.0    0.0          1.0   \n","2                           0       1.0    0.0          1.0   \n","3                           0       1.0    0.0          1.0   \n","4                           0       1.0    0.0          1.0   \n","\n","  OsPlatformSubRelease  CountryIdentifier  \n","0                  rs4                 29  \n","1                  rs4                 93  \n","2                  rs4                 86  \n","3                  rs4                 88  \n","4                  rs4                 18  "],"text/html":["\n","  <div id=\"df-ed15b345-33a0-4efb-b735-7a9db247e004\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HasDetections</th>\n","      <th>Wdft_IsGamer</th>\n","      <th>Census_IsVirtualDevice</th>\n","      <th>Census_OSEdition</th>\n","      <th>Census_HasOpticalDiskDrive</th>\n","      <th>Firewall</th>\n","      <th>SMode</th>\n","      <th>IsProtected</th>\n","      <th>OsPlatformSubRelease</th>\n","      <th>CountryIdentifier</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","      <td>93</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Core</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","      <td>86</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Core</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","      <td>18</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed15b345-33a0-4efb-b735-7a9db247e004')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed15b345-33a0-4efb-b735-7a9db247e004 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed15b345-33a0-4efb-b735-7a9db247e004');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e09b0b21-e8a2-458f-ae97-02c6c014feb1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e09b0b21-e8a2-458f-ae97-02c6c014feb1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e09b0b21-e8a2-458f-ae97-02c6c014feb1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 100000,\n  \"fields\": [\n    {\n      \"column\": \"HasDetections\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wdft_IsGamer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.449784990244929,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_IsVirtualDevice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08122951646350719,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_OSEdition\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Professional\",\n          \"EnterpriseSN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_HasOpticalDiskDrive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Firewall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14886264456147522,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.018726737907739415,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsProtected\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22824585632591543,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OsPlatformSubRelease\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"th2\",\n          \"rs1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CountryIdentifier\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62,\n        \"min\": 1,\n        \"max\": 222,\n        \"num_unique_values\": 221,\n        \"samples\": [\n          26,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kuCxgokP-mYl","executionInfo":{"status":"ok","timestamp":1721476222593,"user_tz":-60,"elapsed":392,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"c5fcdee5-87a2-43ac-876d-5c2fe3df19d3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100000 entries, 0 to 99999\n","Data columns (total 10 columns):\n"," #   Column                      Non-Null Count   Dtype  \n","---  ------                      --------------   -----  \n"," 0   HasDetections               100000 non-null  int64  \n"," 1   Wdft_IsGamer                96585 non-null   float64\n"," 2   Census_IsVirtualDevice      99815 non-null   float64\n"," 3   Census_OSEdition            100000 non-null  object \n"," 4   Census_HasOpticalDiskDrive  100000 non-null  int64  \n"," 5   Firewall                    98924 non-null   float64\n"," 6   SMode                       94068 non-null   float64\n"," 7   IsProtected                 99609 non-null   float64\n"," 8   OsPlatformSubRelease        100000 non-null  object \n"," 9   CountryIdentifier           100000 non-null  int64  \n","dtypes: float64(5), int64(3), object(2)\n","memory usage: 7.6+ MB\n"]}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"OXjB7m9V-ojb","executionInfo":{"status":"ok","timestamp":1721476249386,"user_tz":-60,"elapsed":483,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"2aba344d-20ca-4c61-f760-52f099bb7a7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       HasDetections  Wdft_IsGamer  Census_IsVirtualDevice  \\\n","count  100000.000000  96585.000000            99815.000000   \n","mean        0.499280      0.281607                0.006642   \n","std         0.500002      0.449785                0.081230   \n","min         0.000000      0.000000                0.000000   \n","25%         0.000000      0.000000                0.000000   \n","50%         0.000000      0.000000                0.000000   \n","75%         1.000000      1.000000                0.000000   \n","max         1.000000      1.000000                1.000000   \n","\n","       Census_HasOpticalDiskDrive      Firewall         SMode   IsProtected  \\\n","count               100000.000000  98924.000000  94068.000000  99609.000000   \n","mean                     0.075850      0.977326      0.000351      0.944864   \n","std                      0.264759      0.148863      0.018727      0.228246   \n","min                      0.000000      0.000000      0.000000      0.000000   \n","25%                      0.000000      1.000000      0.000000      1.000000   \n","50%                      0.000000      1.000000      0.000000      1.000000   \n","75%                      0.000000      1.000000      0.000000      1.000000   \n","max                      1.000000      1.000000      1.000000      1.000000   \n","\n","       CountryIdentifier  \n","count      100000.000000  \n","mean          108.188050  \n","std            62.989406  \n","min             1.000000  \n","25%            51.000000  \n","50%            97.000000  \n","75%           162.000000  \n","max           222.000000  "],"text/html":["\n","  <div id=\"df-3f0b8829-54d6-4511-8868-ec64ddcb5c4c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HasDetections</th>\n","      <th>Wdft_IsGamer</th>\n","      <th>Census_IsVirtualDevice</th>\n","      <th>Census_HasOpticalDiskDrive</th>\n","      <th>Firewall</th>\n","      <th>SMode</th>\n","      <th>IsProtected</th>\n","      <th>CountryIdentifier</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>100000.000000</td>\n","      <td>96585.000000</td>\n","      <td>99815.000000</td>\n","      <td>100000.000000</td>\n","      <td>98924.000000</td>\n","      <td>94068.000000</td>\n","      <td>99609.000000</td>\n","      <td>100000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.499280</td>\n","      <td>0.281607</td>\n","      <td>0.006642</td>\n","      <td>0.075850</td>\n","      <td>0.977326</td>\n","      <td>0.000351</td>\n","      <td>0.944864</td>\n","      <td>108.188050</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.500002</td>\n","      <td>0.449785</td>\n","      <td>0.081230</td>\n","      <td>0.264759</td>\n","      <td>0.148863</td>\n","      <td>0.018727</td>\n","      <td>0.228246</td>\n","      <td>62.989406</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>51.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>97.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>162.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>222.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f0b8829-54d6-4511-8868-ec64ddcb5c4c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f0b8829-54d6-4511-8868-ec64ddcb5c4c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f0b8829-54d6-4511-8868-ec64ddcb5c4c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-82bf245c-a22e-489e-b402-7f3ac1b1a892\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-82bf245c-a22e-489e-b402-7f3ac1b1a892')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-82bf245c-a22e-489e-b402-7f3ac1b1a892 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"HasDetections\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35355.187575164135,\n        \"min\": 0.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.49928,\n          1.0,\n          0.5000019816158895\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wdft_IsGamer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34147.81627687241,\n        \"min\": 0.0,\n        \"max\": 96585.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.28160687477351554,\n          1.0,\n          0.449784990244929\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_IsVirtualDevice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35289.87673793933,\n        \"min\": 0.0,\n        \"max\": 99815.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.006642288233231478,\n          1.0,\n          0.08122951646350719\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_HasOpticalDiskDrive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35355.271349988245,\n        \"min\": 0.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.07585,\n          1.0,\n          0.26475928402000326\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Firewall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34974.65670192089,\n        \"min\": 0.0,\n        \"max\": 98924.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.9773260280619466,\n          1.0,\n          0.14886264456147522\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33258.008876969,\n        \"min\": 0.0,\n        \"max\": 94068.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0003508100523025896,\n          1.0,\n          0.018726737907739415\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsProtected\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35216.83840435537,\n        \"min\": 0.0,\n        \"max\": 99609.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.9448644198817376,\n          1.0,\n          0.22824585632591543\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CountryIdentifier\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35319.83819670123,\n        \"min\": 1.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          108.18805,\n          97.0,\n          100000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Create a pandas profiling report\n","profile = ProfileReport(data, title=\"Pandas Profiling Report\", explorative=True)\n","profile.to_file(\"pandas_profiling_report.html\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200,"referenced_widgets":["af7d9bf7b00c466ba2065f77a5f13705","20a421b2c4b7403c9c2b56150eef61a4","708928db54fb44f3add6f07ef1879b47","11f0f429b0e44168ad72f0de01a6b02b","d1067100a44c4aaf9157fd72a90555dc","4b1268e022b540e4a3750713d4b18ff1","3173354b9de34b9c854c6d2e88966057","8f07fed2959e4565a11819b6b43da5a8","f924b004b3fa4388a5525f27d9ca4191","ae59eb75eee846bcb0fb7a4d7e4b796e","1e8ffb3e3d814e75baabf4e4b4b0d313","e720421280634e378aeaadef1e08bd10","f31ca1a72c804d859dd25522a015d68a","d2d36b8bd0a34c1b9d51d7466f204438","c4920c30d803448a90a860243e2e3404","d9d166817e1a402790446bdcf2844cdf","8bcfa6ad5c864db7b0e2d6234046be24","1e2549517566426f965a20b2fa858b5c","cf0621bcaf03491f880c0564a6d3e94b","f4af5b2ef3d749fe8e9e00b79e8bf45e","94d7e2580ea94f3a81c2d4b0ce2cf898","29ac4064d49d45eeb0a6d270515bdc92","f8e315196e854194ab45db6f59d353dc","8398c448a526434fbdabe09a69ba8bf7","4d6326f5ac454ab4b151236432712976","05123e84be8d42be86566d1646a27fe6","d6eaa9eb07cb486d9890aa715016e8c7","8472930ae58c4955b051eea48d8799a2","521d2c9f7e8441019111a909f0378549","4179ed5d97d94e6cb98a985aa7fe5ea0","8a1aff071b2c4fbc8402bfe1f9922be0","81719a89a6664318afc784c78e697845","3323cb81e625483ebf8e8d0dea5a453d","998c02d2a201499489a7fb4d5fcf275b","67d9f9f158b84844977b1ff0b44a4598","da6db696cee247389953e57b39aca2d1","32c8c80e04204a23a43a61f2982088d1","a43e8193d3414f94bf6cdc8aac9fe949","d97ef96e44a4434c84906ae0e0a1bb5b","214501a66ada429c97352ff257940413","17e2a5635e8d49adb5bb670bc0438afa","9aed178d66b649ffbbd9bbe77f1f2218","ba9034b539e04d2b9ddbb86c95021b13","239dc322d44044b8bf2b9fe570d5541c"]},"id":"LXVBOlkO-vMI","executionInfo":{"status":"ok","timestamp":1721476313384,"user_tz":-60,"elapsed":12626,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"69d41e98-dd51-4770-b5a6-3026af746799"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ydata_profiling/profile_report.py:363: UserWarning: Try running command: 'pip install --upgrade Pillow' to avoid ValueError\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["Summarize dataset:   0%|          | 0/5 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"af7d9bf7b00c466ba2065f77a5f13705"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Generate report structure:   0%|          | 0/1 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e720421280634e378aeaadef1e08bd10"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Render HTML:   0%|          | 0/1 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f8e315196e854194ab45db6f59d353dc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Export report to file:   0%|          | 0/1 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"998c02d2a201499489a7fb4d5fcf275b"}},"metadata":{}}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QyLgc1f2-718","executionInfo":{"status":"ok","timestamp":1721496792966,"user_tz":-60,"elapsed":501,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"d636a6a8-0fab-43e4-f95e-0e2560df41c1"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["HasDetections                    0\n","Wdft_IsGamer                  3415\n","Census_IsVirtualDevice         185\n","Census_OSEdition                 0\n","Census_HasOpticalDiskDrive       0\n","Firewall                      1076\n","SMode                         5932\n","IsProtected                    391\n","OsPlatformSubRelease             0\n","CountryIdentifier                0\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["data = data.drop('CountryIdentifier', axis=1)"],"metadata":{"id":"7CBcR9D4_Zfs","executionInfo":{"status":"ok","timestamp":1721504110922,"user_tz":-60,"elapsed":350,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"YJ13RzFJGpZh","executionInfo":{"status":"ok","timestamp":1721478447383,"user_tz":-60,"elapsed":391,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"e759c419-16c5-476d-e69f-3a0e1e59f322"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       HasDetections  Wdft_IsGamer  Census_IsVirtualDevice  \\\n","0                  0           0.0                     0.0   \n","1                  0           0.0                     0.0   \n","2                  0           0.0                     0.0   \n","3                  1           0.0                     0.0   \n","4                  1           0.0                     0.0   \n","...              ...           ...                     ...   \n","99995              0           0.0                     0.0   \n","99996              1           0.0                     0.0   \n","99997              0           0.0                     0.0   \n","99998              0           NaN                     0.0   \n","99999              0           0.0                     0.0   \n","\n","         Census_OSEdition  Census_HasOpticalDiskDrive  Firewall  SMode  \\\n","0            Professional                           0       1.0    0.0   \n","1            Professional                           0       1.0    0.0   \n","2                    Core                           0       1.0    0.0   \n","3            Professional                           0       1.0    0.0   \n","4                    Core                           0       1.0    0.0   \n","...                   ...                         ...       ...    ...   \n","99995                Core                           0       1.0    0.0   \n","99996        Professional                           1       1.0    0.0   \n","99997        Professional                           0       1.0    0.0   \n","99998  CoreSingleLanguage                           0       1.0    0.0   \n","99999                Core                           0       1.0    0.0   \n","\n","       IsProtected OsPlatformSubRelease  \n","0              1.0                  rs4  \n","1              1.0                  rs4  \n","2              1.0                  rs4  \n","3              1.0                  rs4  \n","4              1.0                  rs4  \n","...            ...                  ...  \n","99995          1.0                  th1  \n","99996          1.0                  rs4  \n","99997          1.0                  rs3  \n","99998          1.0                  rs4  \n","99999          1.0                  rs1  \n","\n","[100000 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-e1d82e76-79ca-467a-b688-7fff1709ab34\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HasDetections</th>\n","      <th>Wdft_IsGamer</th>\n","      <th>Census_IsVirtualDevice</th>\n","      <th>Census_OSEdition</th>\n","      <th>Census_HasOpticalDiskDrive</th>\n","      <th>Firewall</th>\n","      <th>SMode</th>\n","      <th>IsProtected</th>\n","      <th>OsPlatformSubRelease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Core</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Core</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Core</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>th1</td>\n","    </tr>\n","    <tr>\n","      <th>99996</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","    </tr>\n","    <tr>\n","      <th>99997</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Professional</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs3</td>\n","    </tr>\n","    <tr>\n","      <th>99998</th>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>CoreSingleLanguage</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs4</td>\n","    </tr>\n","    <tr>\n","      <th>99999</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Core</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>rs1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1d82e76-79ca-467a-b688-7fff1709ab34')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e1d82e76-79ca-467a-b688-7fff1709ab34 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e1d82e76-79ca-467a-b688-7fff1709ab34');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-698cd4d9-c4ad-4bc7-b9e9-0c13dfba38e2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-698cd4d9-c4ad-4bc7-b9e9-0c13dfba38e2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-698cd4d9-c4ad-4bc7-b9e9-0c13dfba38e2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_771a0354-a654-4b7c-9c6e-0b28ceeab6be\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_771a0354-a654-4b7c-9c6e-0b28ceeab6be button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 100000,\n  \"fields\": [\n    {\n      \"column\": \"HasDetections\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wdft_IsGamer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.449784990244929,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_IsVirtualDevice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08122951646350719,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_OSEdition\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Professional\",\n          \"EnterpriseSN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_HasOpticalDiskDrive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Firewall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14886264456147522,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.018726737907739415,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsProtected\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22824585632591543,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OsPlatformSubRelease\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"th2\",\n          \"rs1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["data['HasDetections'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u3coYOp2GuIV","executionInfo":{"status":"ok","timestamp":1721478505677,"user_tz":-60,"elapsed":328,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"a2194b1f-e286-4dc4-a94f-096e0691fef7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["HasDetections\n","0    50072\n","1    49928\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["categorical_cols = data.select_dtypes(include=['object'])\n","\n","for col in categorical_cols:\n","    data[col].fillna(data[col].mode()[0], inplace=True)"],"metadata":{"id":"LDiYZDpiHTfR","executionInfo":{"status":"ok","timestamp":1721504116458,"user_tz":-60,"elapsed":336,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["categorical_cols = data.select_dtypes(include=['number'])\n","\n","for col in categorical_cols:\n","    data[col].fillna(data[col].mode()[0], inplace=True)"],"metadata":{"id":"mDwwO9n1IElk","executionInfo":{"status":"ok","timestamp":1721504118352,"user_tz":-60,"elapsed":412,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Check for duplicates\n","duplicates = data.duplicated().sum()\n","print(\"Number of duplicate rows:\", duplicates)\n","\n","data = data.drop_duplicates()\n","print(\"Number of duplicate rows after removal:\", data.duplicated().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3WsMmlyyIe5G","executionInfo":{"status":"ok","timestamp":1721504120541,"user_tz":-60,"elapsed":491,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"2c33b1be-c0ef-4cd7-e800-de85fc138ff3"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of duplicate rows: 99032\n","Number of duplicate rows after removal: 0\n"]}]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z56fGqiDI5CC","executionInfo":{"status":"ok","timestamp":1721504121841,"user_tz":-60,"elapsed":5,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"01046b63-6e7b-4278-b3e2-536b284a316a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(968, 9)"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["**HANDLING OUTLIERS**"],"metadata":{"id":"5aLLcKQFJ9TD"}},{"cell_type":"code","source":["z_scores = np.abs(zscore(data.select_dtypes(include=[np.number])))\n","threshold = 3\n","outliers = np.where(z_scores > threshold)\n","\n","data = data[(z_scores < threshold).all(axis=1)]\n","print(\"Shape of data after removing outliers:\", data.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KElB6ZZ0I85i","executionInfo":{"status":"ok","timestamp":1721504124874,"user_tz":-60,"elapsed":394,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"cfabd82b-dbe4-4ac4-a65e-ac2e547eba04"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of data after removing outliers: (963, 9)\n"]}]},{"cell_type":"markdown","source":["**ENCODING CATEGORICAL**"],"metadata":{"id":"U0EaseQiJ3Td"}},{"cell_type":"code","source":["# Identify categorical columns\n","categorical_cols = data.select_dtypes(include=[object]).columns\n","\n","label_encoders = {}\n","for col in categorical_cols:\n","    label_encoders[col] = LabelEncoder()\n","    data[col] = label_encoders[col].fit_transform(data[col])\n","\n","data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"collapsed":true,"id":"dEOvhPz8JVyi","executionInfo":{"status":"ok","timestamp":1721504131933,"user_tz":-60,"elapsed":425,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"13e866bb-6ae4-436f-f2f4-bc5a85c015a6"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   HasDetections  Wdft_IsGamer  Census_IsVirtualDevice  Census_OSEdition  \\\n","0              0           0.0                     0.0                11   \n","2              0           0.0                     0.0                 1   \n","3              1           0.0                     0.0                11   \n","4              1           0.0                     0.0                 1   \n","7              0           0.0                     0.0                 1   \n","\n","   Census_HasOpticalDiskDrive  Firewall  SMode  IsProtected  \\\n","0                           0       1.0    0.0          1.0   \n","2                           0       1.0    0.0          1.0   \n","3                           0       1.0    0.0          1.0   \n","4                           0       1.0    0.0          1.0   \n","7                           1       1.0    0.0          1.0   \n","\n","   OsPlatformSubRelease  \n","0                     4  \n","2                     4  \n","3                     4  \n","4                     4  \n","7                     1  "],"text/html":["\n","  <div id=\"df-4e33e2e6-1e2a-4be1-b60d-5cdc9f82dd08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HasDetections</th>\n","      <th>Wdft_IsGamer</th>\n","      <th>Census_IsVirtualDevice</th>\n","      <th>Census_OSEdition</th>\n","      <th>Census_HasOpticalDiskDrive</th>\n","      <th>Firewall</th>\n","      <th>SMode</th>\n","      <th>IsProtected</th>\n","      <th>OsPlatformSubRelease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e33e2e6-1e2a-4be1-b60d-5cdc9f82dd08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e33e2e6-1e2a-4be1-b60d-5cdc9f82dd08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e33e2e6-1e2a-4be1-b60d-5cdc9f82dd08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6d10dbd-511f-481d-87c2-4da6551aad2c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6d10dbd-511f-481d-87c2-4da6551aad2c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6d10dbd-511f-481d-87c2-4da6551aad2c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 963,\n  \"fields\": [\n    {\n      \"column\": \"HasDetections\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wdft_IsGamer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4866621037179116,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_IsVirtualDevice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30386017873169674,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_OSEdition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 18,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          11,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_HasOpticalDiskDrive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Firewall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4514235510856863,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsProtected\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4607719621416301,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OsPlatformSubRelease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DFbZ79lUJmUo","executionInfo":{"status":"ok","timestamp":1721479144108,"user_tz":-60,"elapsed":404,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"e02723b7-be27-4eb9-b413-7f02534171dd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   HasDetections  Wdft_IsGamer  Census_IsVirtualDevice  Census_OSEdition  \\\n","0              0           0.0                     0.0                11   \n","2              0           0.0                     0.0                 1   \n","3              1           0.0                     0.0                11   \n","4              1           0.0                     0.0                 1   \n","7              0           0.0                     0.0                 1   \n","\n","   Census_HasOpticalDiskDrive  Firewall  SMode  IsProtected  \\\n","0                           0       1.0    0.0          1.0   \n","2                           0       1.0    0.0          1.0   \n","3                           0       1.0    0.0          1.0   \n","4                           0       1.0    0.0          1.0   \n","7                           1       1.0    0.0          1.0   \n","\n","   OsPlatformSubRelease  \n","0                     4  \n","2                     4  \n","3                     4  \n","4                     4  \n","7                     1  "],"text/html":["\n","  <div id=\"df-d6856295-1000-4a40-9ea4-f1efaff27635\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HasDetections</th>\n","      <th>Wdft_IsGamer</th>\n","      <th>Census_IsVirtualDevice</th>\n","      <th>Census_OSEdition</th>\n","      <th>Census_HasOpticalDiskDrive</th>\n","      <th>Firewall</th>\n","      <th>SMode</th>\n","      <th>IsProtected</th>\n","      <th>OsPlatformSubRelease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6856295-1000-4a40-9ea4-f1efaff27635')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d6856295-1000-4a40-9ea4-f1efaff27635 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d6856295-1000-4a40-9ea4-f1efaff27635');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c5c21b3-a8ca-49a8-9950-0fed97cf7bdd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c5c21b3-a8ca-49a8-9950-0fed97cf7bdd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c5c21b3-a8ca-49a8-9950-0fed97cf7bdd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 963,\n  \"fields\": [\n    {\n      \"column\": \"HasDetections\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wdft_IsGamer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4866621037179116,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_IsVirtualDevice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30386017873169674,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_OSEdition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 18,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          11,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_HasOpticalDiskDrive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Firewall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4514235510856863,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsProtected\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4607719621416301,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OsPlatformSubRelease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["**PART 1: SUPERVISED LEARNING**"],"metadata":{"id":"ekOn5zUpNdMi"}},{"cell_type":"markdown","source":["**DATA SPLITTING**"],"metadata":{"id":"2RT1b77qK3Bd"}},{"cell_type":"code","source":["X = data.drop(columns=['HasDetections'])\n","y = data['HasDetections']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n"],"metadata":{"id":"6lL31tpQJx9U","executionInfo":{"status":"ok","timestamp":1721504136909,"user_tz":-60,"elapsed":383,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["**STANDARDIZATION**"],"metadata":{"id":"uiiuTCg-Ozce"}},{"cell_type":"code","source":["# Standardize the data (fit on training set and transform both training and test sets)\n","scaler = StandardScaler()\n","xtrain = scaler.fit_transform(X_train)\n","xtest = scaler.transform(X_test)"],"metadata":{"id":"a6kVTzogOyt_","executionInfo":{"status":"ok","timestamp":1721504140064,"user_tz":-60,"elapsed":3,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["model = DecisionTreeClassifier(random_state=42)\n","model.fit(X_train, y_train)\n","\n","y_pred_proba = model.predict_proba(X_test)[:, 1]\n","\n","fpr, tpr, thresholds = roc_curve(y_test, y_pred_proba)\n","roc_auc = auc(fpr, tpr)"],"metadata":{"id":"-SmlpTObLIZS","executionInfo":{"status":"ok","timestamp":1721504143978,"user_tz":-60,"elapsed":353,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["y_pred_proba"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"loWIQsu-pMNb","executionInfo":{"status":"ok","timestamp":1721504228304,"user_tz":-60,"elapsed":396,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"97f5abb4-c5d2-43f2-eae1-511fda1521ec"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0. , 1. , 1. , 0.5, 1. , 1. , 0. , 0.5, 0. , 1. , 0. , 1. , 1. ,\n","       1. , 0. , 1. , 0.5, 0. , 1. , 0. , 1. , 0. , 0. , 0. , 0.5, 1. ,\n","       1. , 1. , 0.5, 0. , 0. , 1. , 1. , 0. , 1. , 0. , 0. , 1. , 0. ,\n","       0.5, 0. , 1. , 1. , 1. , 0. , 0. , 0. , 0. , 1. , 1. , 1. , 0.5,\n","       1. , 0.5, 0. , 0.5, 0. , 0. , 1. , 1. , 0.5, 0.5, 1. , 1. , 0. ,\n","       0. , 1. , 0. , 0. , 0. , 1. , 0. , 0. , 0. , 1. , 1. , 1. , 0.5,\n","       0.5, 0. , 0. , 1. , 1. , 0.5, 1. , 0. , 1. , 1. , 0. , 0.5, 1. ,\n","       0. , 0. , 1. , 0. , 0. , 1. , 0. , 0. , 0. , 0. , 0. , 1. , 0. ,\n","       0. , 1. , 0. , 0. , 1. , 1. , 1. , 0.5, 0.5, 0. , 0. , 1. , 0.5,\n","       1. , 0. , 0.5, 1. , 0.5, 1. , 1. , 0. , 0. , 0. , 1. , 0. , 0. ,\n","       0.5, 0. , 0. , 1. , 0. , 1. , 1. , 1. , 0. , 1. , 0. , 1. , 1. ,\n","       0. , 1. , 0. , 0.5, 0. , 0. , 0.5, 0. , 0. , 0. , 0. , 0. , 0. ,\n","       0. , 1. , 1. , 0.5, 0. , 1. , 1. , 0.5, 1. , 0. , 1. , 1. , 0. ,\n","       0. , 1. , 0. , 1. , 0. , 0.5, 0. , 0. , 1. , 1. , 1. , 0. , 0.5,\n","       1. , 1. , 0. , 0. , 0. , 0. , 1. , 0. , 1. , 1. , 0. , 1. , 0. ,\n","       1. , 0.5, 0. , 1. , 0. , 0. , 1. , 1. , 0. , 0.5, 1. , 0.5, 0. ,\n","       0. , 1. , 1. , 0. , 0. , 0.5, 0. , 0. , 0. , 0.5, 0.5, 1. , 0. ,\n","       1. , 0. , 1. , 0.5, 0. , 0. , 0. , 0. , 0. , 1. , 0. , 0. , 0. ,\n","       1. , 1. , 1. , 1. , 0. , 1. , 1. , 1. , 0. , 1. , 1. , 0.5, 0. ,\n","       0.5, 1. , 0.5, 0.5, 1. , 0. , 0. , 1. , 1. , 0. , 1. , 1. , 0.5,\n","       1. , 0.5, 0. , 1. , 0. , 1. , 1. , 0. , 0. , 1. , 0. , 0.5, 0. ,\n","       0. , 0.5, 0. , 0. , 1. , 1. , 1. , 0.5, 0. , 0. , 0. , 1. , 1. ,\n","       1. , 0. , 1. ])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Plot ROC curve\n","plt.figure()\n","plt.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic')\n","plt.legend(loc=\"lower right\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"YvXkPPdILR-4","executionInfo":{"status":"ok","timestamp":1721496870632,"user_tz":-60,"elapsed":641,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"55546ab9-e1c2-4f71-969b-07236244d892"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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9+7dOXz4sGmbhQsXMnToUBo2bMiIESMIDg6mffv2eHh4PPd01i+//EJiYiI9e/Z85nZP69y5M8WLF2fatGkcP36c7777Di8vL6ZPn26W65VXXuHNN9/ExsaGn3/+mffeew+DwcCQIUPMjhcYGEjXrl0ZOHAgAwYMoGzZshYdY8WKFbzzzju88sorjBs3jjx58nDixAl27dpFt27d+PjjjwkPD+fmzZumHi4XFxcAi38/fv/9dzZs2MDQoUPx9PRMdprzsUGDBvHjjz8ydOhQKlSowP379zl48CAXLlygevXqz8yUktOnT9OwYUNsbW1599138fX15erVq/z8889MmTIlbR+cyLm0rsSESIvHvQJ79uxR9+7dUzdu3FA//vijyp8/v7K3t1c3btwwbdu8eXNVqVIls79IDQaDqlevnipdurSpbcKECQpQmzdvTvZ8BoNBKaXU6tWrlZWVlfrzzz/NHl+0aJEC1KFDh0xtT/YIKaXUuHHjlK2trXrw4IGpLS4uTuXJk8esl6Zfv37K29tbhYaGmj3H22+/rdzd3U29NY97OkqUKGFqe5b27dsrINUeI6WU2rx5swLU/PnzlVJJf007OjqqmzdvmrY7fPiwAtSIESNMbWl9nx9/dg0aNFCJiYlmz5/S63jck7Vq1SpT28aNG816gZ6UWo9Q+fLlVVxcnKl93rx5CjD1bMXFxal8+fKpmjVrqoSEBNN2K1asUMBze4RGjBihAHXixIlnbvfY4x6hp3voOnTooPLly2fWltL70qpVK1WiRAmztmLFiilA7dq1K9n2aTnGw4cPlaurq6pdu7aKiYkx2/bx74BSSr3++utmvUCPWfL7ASgrKyt17ty5ZMfhqR4hd3d3NWTIkGTbPSm1TCn1CDVq1Ei5urqqf/75J9XXKHKvrHVlpxDP0aJFC/Lnz4+Pjw//93//h7OzM9u2bTP99f7gwQN+//13OnfuTGRkJKGhoYSGhnL//n1atWrF5cuXTXeZbdq0iSpVqiTruQDjdQYAGzdupHz58pQrV850rNDQUJo1awbAvn37Us3apUsXEhIS2Lx5s6nt119/5eHDh3Tp0gUwXtOxadMm2rZti1LK7DlatWpFeHg4x48fNztu796903QNSGRkJACurq6pbvP4sYiICLP29u3bU7hwYdN6rVq1qF27Njt37gQse58fGzBgQLKL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\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","\n","# Define the parameter grid\n","param_grid = {\n","    'criterion': ['gini', 'entropy'],\n","    'max_depth': [None, 10, 20, 30, 40, 50],\n","    'min_samples_split': [2, 5, 10],\n","    'min_samples_leaf': [1, 2, 4]\n","}\n","\n","grid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=5, scoring='roc_auc')\n","\n","grid_search.fit(X_train, y_train)\n","\n","print(\"Best parameters found: \", grid_search.best_params_)\n","print(\"Best AUC score: \", grid_search.best_score_)\n","\n","best_model = grid_search.best_estimator_\n","best_model.fit(X_train, y_train)\n","\n","y_pred_proba_best = best_model.predict_proba(X_test)[:, 1]\n","\n","\n","fpr_best, tpr_best, thresholds_best = roc_curve(y_test, y_pred_proba_best)\n","roc_auc_best = auc(fpr_best, tpr_best)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M2ZrxIquLgeb","executionInfo":{"status":"ok","timestamp":1721496879427,"user_tz":-60,"elapsed":4110,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"df657ee7-5cab-4d17-9c50-8d94c7f2d932"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Best parameters found:  {'criterion': 'entropy', 'max_depth': 10, 'min_samples_leaf': 1, 'min_samples_split': 10}\n","Best AUC score:  0.3781404585752412\n"]}]},{"cell_type":"code","source":["# Plot ROC curve for the best model\n","plt.figure()\n","plt.plot(fpr_best, tpr_best, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc_best)\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic (Best Model)')\n","plt.legend(loc=\"lower right\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"9puJVZVNNHUw","executionInfo":{"status":"ok","timestamp":1721496889687,"user_tz":-60,"elapsed":654,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"10e3c903-979f-421a-dd34-8af22e42a923"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**PART 2: UNSUPERVISED LEARNING**"],"metadata":{"id":"M_TFaJ4pNlSX"}},{"cell_type":"markdown","source":["**Drop the target variable from the dataset**"],"metadata":{"id":"vYTjfw5nOH-4"}},{"cell_type":"code","source":["\n","data_unsupervised = data.drop(columns=['HasDetections'])\n","data_unsupervised.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"skGxAC4CNMhX","executionInfo":{"status":"ok","timestamp":1721496895063,"user_tz":-60,"elapsed":530,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"1694a836-817e-4074-93b2-1ab35c169aff"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Wdft_IsGamer  Census_IsVirtualDevice  Census_OSEdition  \\\n","0           0.0                     0.0                11   \n","2           0.0                     0.0                 1   \n","3           0.0                     0.0                11   \n","4           0.0                     0.0                 1   \n","7           0.0                     0.0                 1   \n","\n","   Census_HasOpticalDiskDrive  Firewall  SMode  IsProtected  \\\n","0                           0       1.0    0.0          1.0   \n","2                           0       1.0    0.0          1.0   \n","3                           0       1.0    0.0          1.0   \n","4                           0       1.0    0.0          1.0   \n","7                           1       1.0    0.0          1.0   \n","\n","   OsPlatformSubRelease  \n","0                     4  \n","2                     4  \n","3                     4  \n","4                     4  \n","7                     1  "],"text/html":["\n","  <div id=\"df-a43de4f0-04b4-4ea1-b688-38e0cee4c5f6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Wdft_IsGamer</th>\n","      <th>Census_IsVirtualDevice</th>\n","      <th>Census_OSEdition</th>\n","      <th>Census_HasOpticalDiskDrive</th>\n","      <th>Firewall</th>\n","      <th>SMode</th>\n","      <th>IsProtected</th>\n","      <th>OsPlatformSubRelease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a43de4f0-04b4-4ea1-b688-38e0cee4c5f6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a43de4f0-04b4-4ea1-b688-38e0cee4c5f6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a43de4f0-04b4-4ea1-b688-38e0cee4c5f6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3bada066-1c76-4907-9ebc-620474074f9d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3bada066-1c76-4907-9ebc-620474074f9d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3bada066-1c76-4907-9ebc-620474074f9d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_unsupervised","summary":"{\n  \"name\": \"data_unsupervised\",\n  \"rows\": 963,\n  \"fields\": [\n    {\n      \"column\": \"Wdft_IsGamer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4866621037179116,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_IsVirtualDevice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30386017873169674,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_OSEdition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 18,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          11,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Census_HasOpticalDiskDrive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Firewall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4514235510856863,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsProtected\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4607719621416301,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OsPlatformSubRelease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#scaler = StandardScaler()\n","#data_scaled = scaler.fit_transform(data_unsupervised)\n","\n"],"metadata":{"id":"EJgDusWUOL-_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply K-Means clustering\n","kmeans = KMeans(n_clusters=3, random_state=42)  # Start with 3 clusters as an example\n","clusters = kmeans.fit_predict(data)\n","\n","# Add cluster labels to the dataset\n","data_unsupervised['Cluster'] = clusters\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QTEZUG5pOmWA","executionInfo":{"status":"ok","timestamp":1721496962679,"user_tz":-60,"elapsed":2432,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"63b11b1c-ad4e-44a2-e030-ca12cb38d5cc"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["# Plot the clusters (using the first two principal components for visualization)\n","from sklearn.decomposition import PCA\n","\n","pca = PCA(n_components=2)\n","data_pca = pca.fit_transform(data)\n","data_unsupervised['PCA1'] = data_pca[:, 0]\n","data_unsupervised['PCA2'] = data_pca[:, 1]\n","\n","plt.figure(figsize=(10, 6))\n","sns.scatterplot(x='PCA1', y='PCA2', hue='Cluster', data=data_unsupervised, palette='viridis')\n","plt.title('K-Means Clustering with 3 Clusters')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"JekECyjaPMW8","executionInfo":{"status":"ok","timestamp":1721496976557,"user_tz":-60,"elapsed":3113,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"07d6ee69-1420-44ad-8390-a4368105e179"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Fit K-Means with the optimal number of clusters\n","k_optimal = 4  # Replace with the actual optimal number of clusters found\n","kmeans_optimal = KMeans(n_clusters=k_optimal, random_state=42)\n","clusters_optimal = kmeans_optimal.fit_predict(data)\n","\n","# Add optimal cluster labels to the dataset\n","data_unsupervised['Optimal_Cluster'] = clusters_optimal\n","\n","\n"],"metadata":{"id":"BQIkpqS1PS_i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721496988587,"user_tz":-60,"elapsed":1570,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"7881d2f8-98b6-4f80-d5fe-1abbb2d32dde"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["# Plot the clusters with the optimal number of clusters\n","data_pca_optimal = pca.fit_transform(data)\n","data_unsupervised['PCA1'] = data_pca_optimal[:, 0]\n","data_unsupervised['PCA2'] = data_pca_optimal[:, 1]\n","\n","plt.figure(figsize=(10, 6))\n","sns.scatterplot(x='PCA1', y='PCA2', hue='Optimal_Cluster', data=data_unsupervised, palette='viridis')\n","plt.title(f'K-Means Clustering with {k_optimal} Clusters')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"h8mkbhKfMsrZ","executionInfo":{"status":"ok","timestamp":1721497000800,"user_tz":-60,"elapsed":1487,"user":{"displayName":"Adewunmi Pelumi","userId":"06710081251634332367"}},"outputId":"6c49a427-aa1d-4079-ccc7-7b9f1dc85782"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"DuFdUJIQN5Mb"},"execution_count":null,"outputs":[]}]}